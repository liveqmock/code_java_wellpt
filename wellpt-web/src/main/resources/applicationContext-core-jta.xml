<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/system.properties</value>
				<!-- 集群中节点配置 -->
				<value>classpath*:/system.cluster.properties</value>
				<!-- 本地开发环境配置 -->
				<value>classpath*:/system.local.properties</value>
				<!--国际化资源配置 -->
				<value>classpath*:/i18n/basenames.properties</value>
			</list>
		</property>
	</bean>

	<bean id="springApplicationContext" class="com.wellsoft.pt.core.context.ApplicationContextHolder" lazy-init="false"></bean>

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.wellsoft.***.**"
		name-generator="com.wellsoft.pt.core.annotation.CustomAnnotationBeanNameGenerator">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
	<!-- Connection Info -->
	<!-- <property name="driverClassName" value="${jdbc.driver}" /> -->
	<!-- <property name="url" value="${jdbc.url}" /> -->
	<!-- <property name="username" value="${jdbc.username}" /> -->
	<!-- <property name="password" value="${jdbc.password}" /> -->

	<!-- Connection Pooling Info -->
	<!-- <property name="maxIdle" value="${dbcp.maxIdle}" /> -->
	<!-- <property name="maxActive" value="${dbcp.maxActive}" /> -->
	<!-- <property name="defaultAutoCommit" value="false" /> -->
	<!-- <property name="timeBetweenEvictionRunsMillis" value="3600000" /> -->
	<!-- <property name="minEvictableIdleTimeMillis" value="3600000" /> -->
	<!-- </bean> -->

	<!-- 数据源配置,使用应用服务器的数据库连接池 -->
	<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" /> -->
	<jee:jndi-lookup id="oa_common" jndi-name="java:oa_common"></jee:jndi-lookup>
	<jee:jndi-lookup id="dataSource" jndi-name="java:oa_dev"></jee:jndi-lookup>

	<!-- Hibernate Common SessionFactory配置 -->
	<bean id="commonSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="oa_common"></property>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="annotatedClasses">
			<bean class="com.wellsoft.pt.core.support.CommonEntityAnnotatedClassesFactoryBean">
				<property name="packagesToScan" value="com.wellsoft.***.**" />
			</bean>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache/ehcache-hibernate-local.xml</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>

				<prop key="hibernate.current_session_context_class">jta</prop>
				<prop key="hibernate.transaction.jta.platform">org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory</prop>
			</props>
		</property>
	</bean>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="annotatedClasses">
			<bean class="com.wellsoft.pt.core.support.TenantEntityAnnotatedClassesFactoryBean">
				<property name="packagesToScan" value="com.wellsoft.***.**" />
			</bean>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache/ehcache-hibernate-local.xml</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>

				<prop key="hibernate.current_session_context_class">jta</prop>
				<prop key="hibernate.transaction.jta.platform">org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory</prop>

				<prop key="hibernate.multiTenancy">DATABASE</prop>
				<prop key="hibernate.connection.datasource">java:/oa_dev</prop>
				<prop key="hibernate.multi_tenant_connection_provider">com.wellsoft.pt.core.dao.hibernate.DefaultDataSourceBasedMultiTenantConnectionProviderImpl</prop>
				<prop key="hibernate.tenant_identifier_resolver">com.wellsoft.pt.core.dao.hibernate.DefaultCurrentTenantIdentifierResolver</prop>
			</props>
		</property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<!-- <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> -->
	<!-- <property name="sessionFactory" ref="sessionFactory" /> -->
	<!-- <property name="dataSource" ref="dataSource" /> -->
	<!-- </bean> -->
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<context:annotation-config />

	<!-- 国际化配置 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="${basenames}"></property>
		<property name="useCodeAsDefaultMessage" value="true"></property>
	</bean>
	<!-- 默认从请求头获取请求信息 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"></bean>

</beans>