<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">

	<bean id="fetchMailJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.wellsoft.pt.mail.job.FetchMailJob"></property>
	</bean>

	<bean id="inboxMailMigrationJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="com.wellsoft.pt.mail.job.InboxMailMigrationJob"></property>
	</bean>

	<bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="fetchMailJob"></property>
		<property name="cronExpression" value="30/60 * * ? * *"></property>
	</bean>

	<bean id="cronTrigger2" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="inboxMailMigrationJob"></property>
		<property name="cronExpression" value="30/60 * * ? * *"></property>
	</bean>

	<!-- 初始化任务，目前没有使用集群，暂时使用类初始化数据 -->
	<bean id="initJobDetailJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.wellsoft.pt.task.job.InitJobDetailJob"></property>
	</bean>
	<bean id="simpleTrigger1" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="repeatCount" value="0"></property>
		<property name="repeatInterval" value="3000"></property>
		<property name="jobDetail" ref="initJobDetailJob"></property>
	</bean>
	<bean id="cronTrigger3" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="fetchMailJob"></property>
		<property name="cronExpression" value="30/60 * * ? * *"></property>
	</bean>

	<bean id="fetchPurchaseData1" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="com.wellsoft.pt.purchase.job.FetchPurchaseJob1"></property>
	</bean>

	<bean id="cronTrigger4" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="fetchPurchaseData1"></property>
		<property name="cronExpression" value="0 0 1 ? * *"></property>
	</bean>

	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey" value="applicationContextKey"></property>
		<property name="configLocation" value="classpath:quartz.properties" />
		<!-- 延迟30秒启动Scheduler -->
		<property name="startupDelay" value="10" />
		<property name="triggers">
			<list>
				<ref local="simpleTrigger1" />
				<!-- <ref local="cronTrigger1" /> -->
				<!-- <ref local="cronTrigger2" /> -->
				<!-- <ref local="cronTrigger3" /> -->
			</list>
		</property>
	</bean>

	<bean id="schedulerFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		autowire="no">
		<property name="triggers">
			<list>
				<ref local="cronTrigger4" />
			</list>
		</property>
	</bean>

</beans>